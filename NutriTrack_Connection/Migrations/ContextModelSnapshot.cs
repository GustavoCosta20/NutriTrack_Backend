// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NutriTrack_Connection;

#nullable disable

namespace NutriTrack_Connection.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NutriTrack_Domains.Tables.UsersTb.AlimentosConsumido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Calorias")
                        .HasColumnType("double precision");

                    b.Property<double>("Carboidratos")
                        .HasColumnType("double precision");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<double>("Gorduras")
                        .HasColumnType("double precision");

                    b.Property<double>("Proteinas")
                        .HasColumnType("double precision");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double precision");

                    b.Property<Guid>("RefeicaoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("RefeicaoId");

                    b.ToTable("TbAlimentosConsumidos");
                });

            modelBuilder.Entity("NutriTrack_Domains.Tables.UsersTb.Refeicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<string>("NomeRef")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TbRefeicao");
                });

            modelBuilder.Entity("NutriTrack_Domains.Tables.UsersTb.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("AlturaEmCm")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Genero")
                        .HasColumnType("integer");

                    b.Property<int>("NivelDeAtividade")
                        .HasColumnType("integer");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Objetivo")
                        .HasColumnType("integer");

                    b.Property<double>("PesoEmKg")
                        .HasColumnType("double precision");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TbUsers");
                });

            modelBuilder.Entity("NutriTrack_Domains.Tables.UsersTb.AlimentosConsumido", b =>
                {
                    b.HasOne("NutriTrack_Domains.Tables.UsersTb.Refeicao", "Refeicao")
                        .WithMany("AlimentosConsumidos")
                        .HasForeignKey("RefeicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Refeicao");
                });

            modelBuilder.Entity("NutriTrack_Domains.Tables.UsersTb.Refeicao", b =>
                {
                    b.HasOne("NutriTrack_Domains.Tables.UsersTb.Users", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NutriTrack_Domains.Tables.UsersTb.Refeicao", b =>
                {
                    b.Navigation("AlimentosConsumidos");
                });
#pragma warning restore 612, 618
        }
    }
}
